pipeline{
    
    agent any

environment {
  DOCKER_TAG = getVersion()
}
stages{
    stage('pulling the code'){
        steps{
            git branch: 'main',
            url: 'https://github.com/MalekFarhani/AchatSpringBoot'
}}
    stage('build'){
        steps{ 
            sh 'mvn clean package'
}}
 stage('test'){
        steps{ 
            sh 'mvn test'
}} 
/*stage('SonarQube Analysis') {
            steps {
              // echo 'sonarqube'
                sh 'mvn sonar:sonar -Dsonar.login=ffdf83093412b00e3ee51f3f8f52c33886353bef'
            }
        }
*/
   stage('dep nexus'){
        steps{ 
            sh 'mvn deploy -DskipTests'
}} 
/*stage('Publish to Nexus') {
            steps {
               nexusArtifactUploader artifacts: [[artifactId: 'malek',
               classifier: '',
               file: './target/JavaTest-0.0.1-SNAPSHOT.war',
               type: '']],
               credentialsId: 'nex-cred',
               groupId: 'test',
               nexusUrl: '192.168.222.131:8081',
               nexusVersion: 'nexus3',
               protocol: 'http',55
               repository: 'test',
               version: '${BUILD_ID}'
          }}
*/
 stage('docker'){
        steps{ 
                sh 'docker build . -t malekkkk/achat:2.0'   
    
        }}
 stage('docker login'){
        steps {
                withCredentials([string(credentialsId: 'dockerh', variable: 'dockerhubpwd')]) {      
                        sh "echo \$dockerhubpwd | docker login -u malekkkk --password-stdin"
            }}}
   
stage ('docker push'){
        steps{
            sh 'docker push malekkkk/achat:2.0'
        }
    }
stage('docker compose '){
       steps{
            sh 'docker compose up -d '
      }
    } 
}
}
def getVersion()
{
   def commitHash = sh returnStdout: true, script: 'git rev-parse --short  HEAD'
   return commitHash 
}